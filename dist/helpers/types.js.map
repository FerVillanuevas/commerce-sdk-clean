{"version":3,"sources":["../../src/helpers/types.ts"],"sourcesContent":["/*\n * Copyright (c) 2023, Salesforce, Inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * Makes a type easier to read.\n */\ntype Prettify<T> = NonNullable<{\n  [K in keyof T]: T[K];\n}>;\n\n/**\n * Generates the types required on a method, based on those provided in the config.\n */\nexport type CompositeParameters<\n  MethodParameters extends Record<string, unknown>,\n  ConfigParameters extends Record<string, unknown>\n> = Prettify<\n  Omit<MethodParameters, keyof ConfigParameters> & Partial<MethodParameters>\n>;\n\n/**\n * If an object has a `parameters` property, and the `parameters` object has required properties,\n * then the `parameters` property on the root object is marked as required.\n */\nexport type RequireParametersUnlessAllAreOptional<\n  T extends {parameters?: Record<string, unknown>}\n> = Record<string, never> extends NonNullable<T['parameters']>\n  ? T\n  : Prettify<T & Required<Pick<T, 'parameters'>>>;\n\n/**\n * Template parameters used in the base URI of all API endpoints. `version` will default to `\"v1\"`\n * if not specified.\n */\nexport interface BaseUriParameters {\n  shortCode: string;\n  version?: string; // Optional, will default to \"v1\" if not provided.\n}\n\n/**\n * Generic interface for path parameters.\n */\nexport interface PathParameters {\n  [key: string]: string | number | boolean;\n}\n\n/**\n * Generic interface for query parameters.\n */\nexport interface QueryParameters {\n  [key: string]: string | number | boolean | string[] | number[];\n}\n\n/**\n * Generic interface for all parameter types.\n */\nexport type UrlParameters = PathParameters | QueryParameters;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}